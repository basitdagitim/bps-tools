#!/bin/bash
bps_create_package()
{
echo "Paketlenecek Paket: $1"
}
bps_update()
{
echo "********** Paket Listesi Güncelleniyor **********"
busybox wget -O /tmp/index.lst https://basitdagitim.github.io/binary-package/index.lst 1>/dev/null 2>/dev/null
echo "********** Paket Listesi Güncellendi **********"

}
bps_find_package()
{
paket=$1
paketname="name=\"${paket}\""
#echo "$paket"
indexpaket=$(cat /tmp/index.lst|grep $paketname)
name=""
version=""
depends=""
if [ -n "${indexpaket}" ]
then
	namex=$(echo $indexpaket|cut -d":" -f1)
	versionx=$(echo $indexpaket|cut -d":" -f2)
	dependsx=$(echo $indexpaket|cut -d":" -f3)
	name=${namex:6:-1}
	version=${versionx:9:-1}
	depends=${dependsx:9:-1}
else
	echo "***********Paket Bulunamadı**********"
	exit
fi
echo "$name,$version,$depends"
}

depens_install()
{

IFS=',' read -r -a array <<< "$1"
for itempaketname in "${array[@]}"
do
paketname="name=\"${itempaketname}\""
depens_paketname=$(cat /tmp/index.lst|grep $paketname)
depends=""
if [ -n "${depens_paketname}" ]
then
	dependsx=$(echo $depens_paketname|cut -d":" -f3)
	depends=${dependsx:9:-1}
fi
	
	#echo "$itempaketname ----> $depends"
	
	IFS=',' read -r -a sub_depends <<< "$depends"
	for subpaketname in "${sub_depends[@]}"
	do
	#echo "alt bağımılılıklar $subpaketname"
	
		IFS=',' read -r -a sub_dependslist <<< "$All_DEPENDS"
		if [[ ! $(echo ${sub_dependslist[@]} | fgrep -w $subpaketname) ]]
		then
			if [ ${#All_DEPENDS[@]} -eq 0 ]; then
		    		#echo "The array is empty"
		    		All_DEPENDS="${itempaketname},${subpaketname}"
			else
		    		#echo "The array is not empty"
		    		All_DEPENDS="${All_DEPENDS},${subpaketname}"
			fi
	 	fi
		
	depens_install $subpaketname
	done
	
done
#echo $All_DEPENDS
}

pakage_install()
{
namex=$1
versionx=$2
# paketi indirme
mkdir -p /tmp/bps/kur
rm -rf /tmp/bps/kur/*
busybox wget -O /tmp/bps/kur/${namex}-${versionx}.tar.gz https://github.com/basitdagitim/binary-package/raw/master/${namex}/${namex}-${versionx}.bps 1>/dev/null 2>/dev/null
mkdir -p /var/lib/bps
touch /var/lib/bps/index.lst
cd /tmp/bps/kur/

# paketi açma
tar -xf ${namex}-${versionx}.tar.gz
mkdir -p rootfs
tar -xf rootfs.tar.xz -C rootfs
# bagimlilik yükleniyor
depens_install
# paketi kurma
cp -prfv rootfs/* $ROOTFS/ 1>/dev/null 2>/dev/null

#eğer daha kurulmuşsa kayıt siliniyor
sed -i "/name=\"${namex}\"/d" /var/lib/bps/index.lst
#name version depends /var/bps/index.lst eklenmesi
echo "name=\"${namex}\":"version=\"${versionx}\":"depends=\"${depends}\"">>/var/lib/bps/index.lst
#paket içinde gelen paket dosyalarının dosya ve dizin yapısını tutan file index dosyanının /var/bps/ konumuna kopyalanması
cp file.index /var/lib/bps/${namex}-${versionx}.lst  1>/dev/null 2>/dev/null
# sistem guncelleniyor
ldconfig
echo "********** $name Paketi Kuruldu **********"
}

bps_install()
{
echo "Kurulacak Paket: $1"
IFS=',' read -r -a array <<< $(bps_find_package $1)
name=${array[0]}
version=${array[1]}
depends=${array[@]:2}
echo "********** ${name}-${version} Paketi Kuruluyor **********"
echo "********** ${depends} depends Kuruluyor **********"

declare -a All_DEPENDS
depens_install "gcc"
echo "GENEL BAĞIMLILIK: $All_DEPENDS"


}

bps_reinstall()
{
echo "Tekrar Kurulacak Paket: $1"
}

bps_remove()
{
echo "Kaldırılacak Paket: $1"
}


bps_help()
{
     echo "Usage: bps <options>"
     echo " -u,  --update		: package index update"
     echo " -c,  --create		: create bps package"
     echo " -i,  --install		: package install"
     echo " -ri, --reinstall	: package re-install"
     echo " -r,  --remove 		: package remove"
     echo " -h,  --help   		: bps help"

}
for arg in $@ ; do
    if [[ "$arg" == "--update" || "$arg" == "-u" ]] ; then
        bps_update
     elif [[ "$arg" == "--create" || "$arg" == "-c" ]] ; then
        bps_create_package $2
    elif [[ "$arg" == "--install" || "$arg" == "-i" ]] ; then
        bps_install $2
    elif [[ "$arg" == "--reinstall" || "$arg" == "-ri" ]] ; then
        bps_reinstall $2
    elif [[ "$arg" == "--remove" || "$arg" == "-r" ]] ; then
        bps_remove
    elif [[ "$arg" == "--help" || "$arg" == "-h" ]] ; then
        bps_help
      fi
done
