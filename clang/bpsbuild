#!/usr/bin/env bash
name="clang"
version="16.0.6"
description="The LLVM Project is a collection of modular and reusable compiler and toolchain technologies."
source="https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/clang-$version.src.tar.xz"
depends="llvm"
group=(sys.devel)


setup(){
   
     cd $SOURCEDIR
    wget "https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/clang-tools-extra-$version.src.tar.xz"
    tar -xf clang-tools-extra-$version.src.tar.xz
    wget "https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/llvm-$version.src.tar.xz"
    tar -xf llvm-$version.src.tar.xz
    wget "https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/cmake-$version.src.tar.xz"
    tar -xf cmake-$version.src.tar.xz
     
   
    mkdir build && cd build
    mv ../cmake{-$version.src,}
    #mv ../clang-tools-extra-$version.src ../clang-$version.src/tools/extra
    mv ../clang-tools-extra-16.0.6.src ../tools/extra
    cmake .. -G Ninja \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_DOCDIR=share/doc \
    -DCMAKE_SKIP_RPATH=ON \
    -DCLANG_DEFAULT_PIE_ON_LINUX=ON \
    -DCLANG_LINK_CLANG_DYLIB=ON \
    -DENABLE_LINKER_BUILD_ID=ON \
    -DLLVM_BUILD_DOCS=OFF \
    -DLLVM_BUILD_TESTS=OFF \
    -DLLVM_ENABLE_RTTI=ON \
    -DLLVM_ENABLE_SPHINX=OFF \
    -DLLVM_EXTERNAL_LIT=/usr/bin/lit \
    -DLLVM_INCLUDE_DOCS=OFF \
    -DLLVM_LINK_LLVM_DYLIB=ON \
    -DSPHINX_WARNINGS_AS_ERRORS=OFF \
    -DLLVM_MAIN_SRC_DIR=$SOURCEDIR/llvm-$version.src
}

build(){
    ninja -C build
}

package(){
    DESTDIR=$DESTDIR ninja -C build install
}

